#!/usr/bin/env python

# Trigonometry table generator
# Matt Sarnoff (msarnoff.org)
# May 6, 2011
#
# Generates mathematical function tables in 8.8 signed fixed point
# and writes them in assembler include format.

from math import *
import sys

def outputTable(outfile, domain, fn):
	for x in domain:
		# Compute value
		value = fn(x)
	
		# Convert to 8.8 fixed point
		fixedvalue = int(round(value*256))
		outfile.write("\t.equ\t0x%04X\t;x=%g, y=%g\n" %
			(fixedvalue & 0xFFFF, x, value))
		

# TODO: parse arguments
minval = 0
maxval = 2*pi	# note: open interval
steps = 32
fn = lambda x: sin(-x)
description = "Cosine, d = 1"

outfile = open(sys.argv[1], 'w') if len(sys.argv) >= 2 else sys.stdout

stepsize = (maxval-minval)/steps
gen = (x * stepsize for x in range(0,steps))

outfile.write("; "+description+" (generated by tablegen.py)\n")
outputTable(outfile, gen, fn)

