                              1 ; vim:noet:sw=8:ts=8:ai:syn=as6809
                              2 ; Matt Sarnoff (msarnoff.org/6809) - January 10, 2011
                              3 ;
                              4 ; Sega 3-button gamepad test program
                              5 ; Controllers connected to ports A and B of the YM2149
                              6 
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                         
                             10 	.list
                             11 
                     0000    12 NAMETABLE	.equ	0x0000
                             13 
                             14 	.area	_CODE(ABS)
   0100                      15 	.org	USERPROG_ORG
                             16 ;------------------------------------------------------------------------------
                             17 ; setup
                             18 ;------------------------------------------------------------------------------
   0100 10 CE 80 00   [ 4]   19 		lds	#RAMEND+1	;set up stack pointer
   0104 CC 01 45      [ 3]   20 		ldd	#VBLANK		;set up interrupt vector
   0107 FD 00 08      [ 6]   21 		std	IRQVEC
   010A CC E1 E0      [ 3]   22 		ldd	#VDP_OUTCH	;set up character output vector
   010D FD 00 0E      [ 6]   23 		std	OUTCH
   0110 B6 CC 0E      [ 5]   24 		lda	CTLR_SET_SELECT	;make sure controller SELECT is set
   0113 BD E1 3C      [ 8]   25 		jsr	VDP_INITTEXT	;text mode
                             26 
                             27 ; print strings
   0116 CC 00 00      [ 3]   28 		ldd	#NAMETABLE
   0119 8E 02 26      [ 3]   29 		ldx	#titlestr	;print title string (advances X)
   011C BD E1 C5      [ 8]   30 		jsr	VDP_PRINTSTR
   011F CC 00 50      [ 3]   31 		ldd	#NAMETABLE+80
   0122 BD E1 C5      [ 8]   32 		jsr	VDP_PRINTSTR	;print player 1 string
   0125 CC 00 78      [ 3]   33 		ldd	#NAMETABLE+120
   0128 BD E1 C5      [ 8]   34 		jsr	VDP_PRINTSTR	;print player 2 string
                             35 		
                             36 ; enable interrupts
   012B 1C EF         [ 3]   37 		andcc	#0b11101111
                             38 
                             39 ; turn on the display, enable vertical blanking interrupt
   012D CC F0 81      [ 3]   40 		ldd	#0xF081		;set bits 6 and 5 of register 1
   0130 B7 CC 01      [ 5]   41 		sta	VDP_REG
   0133 F7 CC 01      [ 5]   42 		stb	VDP_REG
   0136 20 00         [ 3]   43 		bra	loop
                             44 
                             45 
                             46 ;------------------------------------------------------------------------------
                             47 ; logic update routine
                             48 ;------------------------------------------------------------------------------
   0138 BD 01 E0      [ 8]   49 loop:		jsr	READ_3BUTTON	;read controllers
   013B B7 02 53      [ 5]   50 		sta	PAD1STATE
   013E F7 02 54      [ 5]   51 		stb	PAD2STATE
                             52 
   0141 13            [ 4]   53 		sync
   0142 7E 01 38      [ 4]   54 		jmp	loop
                             55 
                             56 
                             57 ;------------------------------------------------------------------------------
                             58 ; vertical blanking interrupt handler
                             59 ;------------------------------------------------------------------------------
   0145 B6 CC 01      [ 5]   60 VBLANK:		lda	VDP_REG		;read status, clear interrupt flag
                             61 
                             62 ; print controller 1 state
   0148 CC 40 5A      [ 3]   63 		ldd	#(VRAM|NAMETABLE+90)
   014B F7 CC 01      [ 5]   64 		stb	VDP_REG
   014E B7 CC 01      [ 5]   65 		sta	VDP_REG
   0151 B6 02 53      [ 5]   66 		lda	PAD1STATE
   0154 8D 0F         [ 7]   67 		bsr	DISPSTATE
                             68 
                             69 ; print controller 2 state
   0156 CC 40 82      [ 3]   70 		ldd	#(VRAM|NAMETABLE+130)
   0159 F7 CC 01      [ 5]   71 		stb	VDP_REG
   015C B7 CC 01      [ 5]   72 		sta	VDP_REG
   015F B6 02 54      [ 5]   73 		lda	PAD2STATE
   0162 8D 01         [ 7]   74 		bsr	DISPSTATE
                             75 
   0164 3B            [15]   76 		rti
                             77 
                             78 
                             79 ;------------------------------------------------------------------------------
                             80 ; subroutines
                             81 ;------------------------------------------------------------------------------
                             82 
                             83 ;;; display controller state (bits in A, 1 indicates button pressed)
   0165 8E 02 4A      [ 3]   84 DISPSTATE:	ldx	#btnsymbols
   0168 E6 80         [ 6]   85 dispbtn:	ldb	,x+		;get symbol for this button
   016A 27 0F         [ 3]   86 		beq	dispdone
   016C 44            [ 2]   87 		lsra			;read button bit
   016D 25 02         [ 3]   88 		bcs	pressed		;bit set? button pressed
   016F C6 5F         [ 2]   89 		ldb	#'_		;bit clear? button not pressed
   0171 F7 CC 00      [ 5]   90 pressed:	stb	VDP_VRAM	;print character
   0174 C6 20         [ 2]   91 		ldb	#0x20		;print space
   0176 F7 CC 00      [ 5]   92 		stb	VDP_VRAM
   0179 20 ED         [ 3]   93 		bra	dispbtn
   017B 39            [ 5]   94 dispdone:	rts
                             95 
                             96 
                             97 ;------------------------------------------------------------------------------
                             98 ; includes
                             99 ;------------------------------------------------------------------------------
                            100 
                            101 	.include "../include/ym2149.asm"
                              1 ; vim:noet:sw=8:ts=8:ai:syn=as6809
                              2 ; Matt Sarnoff (msarnoff.org/6809) - November 5, 2010
                              3 ;
                              4 ;************ YM2149/AY-3-8910 Programmable Sound Generator ************
                              5 ;
                              6 ; Assuming a 2 MHz master clock:
                              7 ;
                              8 ; Tone generator frequency = 2000000 / (16 * T)
                              9 ;   where T is the 12-bit value in 0x01-0x00, 0x03-0x02, or 0x05-0x04
                             10 ;   min (T=4095):  30.525 Hz
                             11 ;   max (T=1):     125000 Hz
                             12 ; given F in Hz, T = 125000 / F
                             13 ;
                             14 ; Noise generator frequency = 2000000 / (16 * N)
                             15 ;   where N is the 5-bit value in 0x06
                             16 ;   min (N=31):    4032.3 Hz
                             17 ;   max (N=1):     125000 Hz
                             18 ;
                             19 ; Envelope frequency = 2000000 / (256 * E)
                             20 ;   where E is the 16-bit value in 0x0C-0x0B
                             21 ;   min (E=65535): 0.1192 Hz
                             22 ;   max (E=1):     7812.5 Hz
                             23  
                             24 ;;; silence the sound generator
                             25 ;;; arguments:	none
                             26 ;;; returns:	none
                             27 ;;; destroys:	A,B
   017C CC 07 3F      [ 3]   28 PSG_SILENCE::	ldd	#(PSG_CTRL<<8)|TONE_NONE|NOISE_NONE
   017F FD CC 02      [ 6]   29 		std	PSG		;write address (in A) then data (in B)
   0182 39            [ 5]   30 		rts
                             31 
                             32 
                             33 ;;; write to a PSG register
                             34 ;;; arguments:	register address (0x00-0x0F) in A
                             35 ;;;		data in B
                             36 ;;; returns:	none
                             37 ;;; destroys:	none
   0183 FD CC 02      [ 6]   38 PSG_WRITE::	std	PSG
   0186 39            [ 5]   39 		rts
                             40 
                             41 
                             42 ;;; read from a PSG register
                             43 ;;; argments:	register address (0x00-0x0F) in A
                             44 ;;; returns:	register value in A
                             45 ;;; destroys:	none
   0187 B7 CC 02      [ 5]   46 PSG_READ::	sta	PSG
   018A B6 CC 02      [ 5]   47 		lda	PSG
   018D 39            [ 5]   48 		rts
                             49 
                             50 
                             51 ;;; write 2-byte value to registers 0x00-0x01 (tone generator A frequency)
                             52 ;;; arguments:	value in D (big-endian)
                             53 ;;; returns:	none
                             54 ;;; destroys:	A,B
   018E 34 02         [ 6]   55 PSG_SET_AFREQ::	pshs	a
   0190 86 00         [ 2]   56 		lda	#PSG_A_FREQL	;address 0
   0192 FD CC 02      [ 6]   57 		std	PSG		;write address 0 followed by data LSB
   0195 4C            [ 2]   58 		inca			;address 1
   0196 35 04         [ 6]   59 		puls	b		;get data MSB
   0198 FD CC 02      [ 6]   60 		std	PSG		;write address 1 followed by data MSB
   019B 39            [ 5]   61 		rts
                             62 
                             63 
                             64 ;;; write 2-byte value to registers 0x02-0x03 (tone generator B frequency)
                             65 ;;; arguments:	value in D (big-endian)
                             66 ;;; returns:	none
                             67 ;;; destroys:	A,B
   019C 34 02         [ 6]   68 PSG_SET_BFREQ::	pshs	a
   019E 86 02         [ 2]   69 		lda	#PSG_B_FREQL
   01A0 FD CC 02      [ 6]   70 		std	PSG
   01A3 4C            [ 2]   71 		inca
   01A4 35 04         [ 6]   72 		puls	b
   01A6 FD CC 02      [ 6]   73 		std	PSG
   01A9 39            [ 5]   74 		rts
                             75 
                             76 
                             77 ;;; write 2-byte value to registers 0x04-0x05 (tone generator C frequency)
                             78 ;;; arguments:	value in D (big-endian)
                             79 ;;; returns:	none
                             80 ;;; destroys:	A,B
   01AA 34 02         [ 6]   81 PSG_SET_CFREQ::	pshs	a
   01AC 86 04         [ 2]   82 		lda	#PSG_C_FREQL
   01AE FD CC 02      [ 6]   83 		std	PSG
   01B1 4C            [ 2]   84 		inca
   01B2 35 04         [ 6]   85 		puls	b
   01B4 FD CC 02      [ 6]   86 		std	PSG
   01B7 39            [ 5]   87 		rts
                             88 
                             89 
                             90 ;;; write 2-byte value to registers 0x0B-0x0C (envelope frequency)
                             91 ;;; arguments:	value in D (big-endian)
                             92 ;;; returns:	none
                             93 ;;; destroys	A,B
   01B8 34 02         [ 6]   94 PSG_SET_EFREQ::	pshs	a
   01BA 86 0B         [ 2]   95 		lda	#PSG_ENV_FREQL
   01BC FD CC 02      [ 6]   96 		std	PSG
   01BF 4C            [ 2]   97 		inca
   01C0 35 04         [ 6]   98 		puls	b
   01C2 FD CC 02      [ 6]   99 		std	PSG
   01C5 39            [ 5]  100 		rts
                            101 
                            102 
                            103 ;;; read 1-button Atari joysticks
                            104 ;;; arguments:	none
                            105 ;;; returns:	controller 1 button state in A
                            106 ;;;		controller 2 button state in B
                            107 ;;; destroys:	none
                            108 ;;;
                            109 ;;; A 1 bit indicates a pressed button.
                            110 ;;; On return, flags reflect controller 1 state.
   01C6 B6 CC 0E      [ 5]  111 READ_1BUTTON::	lda	CTLR_SET_SELECT	;make sure select line is high
                            112 		
   01C9 C6 0F         [ 2]  113 		ldb	#PSG_IO_B
   01CB F7 CC 02      [ 5]  114 		stb	PSG_LATCH_ADDR
   01CE F6 CC 02      [ 5]  115 		ldb	PSG_READ_ADDR
   01D1 53            [ 2]  116 		comb
   01D2 C4 1F         [ 2]  117 		andb	#0b00011111	;controller 2 state in B
                            118 
   01D4 86 0E         [ 2]  119 		lda	#PSG_IO_A
   01D6 B7 CC 02      [ 5]  120 		sta	PSG_LATCH_ADDR
   01D9 B6 CC 02      [ 5]  121 		lda	PSG_READ_ADDR
   01DC 43            [ 2]  122 		coma
   01DD 84 1F         [ 2]  123 		anda	#0b00011111	;controller 1 state in A
   01DF 39            [ 5]  124 		rts
                            125 
                            126 
                            127 ;;; read 3-button Sega gamepads
                            128 ;;; arguments:	none
                            129 ;;; returns:	controller 1 button state in A
                            130 ;;;		controller 2 button state in B
                            131 ;;; destroys:	none
                            132 ;;;
                            133 ;;; A 1 bit indicates a pressed button.
                            134 ;;; Flags are not set on return.
   01E0 32 7E         [ 5]  135 READ_3BUTTON::	leas	-2,s		;2 bytes for controller states
   01E2 B6 CC 06      [ 5]  136 		lda	CTLR_CLR_SELECT	;read A and Start buttons
   01E5 86 0E         [ 2]  137 		lda	#PSG_IO_A	;read controller 1
   01E7 B7 CC 02      [ 5]  138 		sta	PSG_LATCH_ADDR
   01EA B6 CC 02      [ 5]  139 		lda	PSG_READ_ADDR
   01ED 43            [ 2]  140 		coma			;invert bits so 1 indicates press
   01EE 84 30         [ 2]  141 		anda	#0b00110000
   01F0 48            [ 2]  142 		lsla			;shift into bits 6 and 7
   01F1 48            [ 2]  143 		lsla
   01F2 A7 E4         [ 4]  144 		sta	,s
   01F4 86 0F         [ 2]  145 		lda	#PSG_IO_B	;read controller 2
   01F6 B7 CC 02      [ 5]  146 		sta	PSG_LATCH_ADDR
   01F9 B6 CC 02      [ 5]  147 		lda	PSG_READ_ADDR
   01FC 43            [ 2]  148 		coma
   01FD 84 30         [ 2]  149 		anda	#0b00110000
   01FF 48            [ 2]  150 		lsla
   0200 48            [ 2]  151 		lsla
   0201 A7 61         [ 5]  152 		sta	1,s
                            153 
   0203 B6 CC 0E      [ 5]  154 		lda	CTLR_SET_SELECT	;read up, down, left, right, B, C
   0206 86 0E         [ 2]  155 		lda	#PSG_IO_A
   0208 B7 CC 02      [ 5]  156 		sta	PSG_LATCH_ADDR
   020B B6 CC 02      [ 5]  157 		lda	PSG_READ_ADDR
   020E 43            [ 2]  158 		coma
   020F 84 3F         [ 2]  159 		anda	#0b00111111
   0211 AA E4         [ 4]  160 		ora	,s
   0213 A7 E4         [ 4]  161 		sta	,s
   0215 86 0F         [ 2]  162 		lda	#PSG_IO_B
   0217 B7 CC 02      [ 5]  163 		sta	PSG_LATCH_ADDR
   021A B6 CC 02      [ 5]  164 		lda	PSG_READ_ADDR
   021D 43            [ 2]  165 		coma
   021E 84 3F         [ 2]  166 		anda	#0b00111111
   0220 AA 61         [ 5]  167 		ora	1,s
   0222 A7 61         [ 5]  168 		sta	1,s
   0224 35 86         [ 8]  169 		puls	a,b,pc		;return controller states in A and B
                            170 
                            102 
                            103 ;------------------------------------------------------------------------------
                            104 ; static data
                            105 ;------------------------------------------------------------------------------
                            106 
   0226 43 6F 6E 74 72 6F   107 titlestr:	.asciz	"Controller Test"
        6C 6C 65 72 20 54
        65 73 74 00
   0236 50 6C 61 79 65 72   108 p1str:		.asciz	"Player 1:"
        20 31 3A 00
   0240 50 6C 61 79 65 72   109 p2str:		.asciz	"Player 2:"
        20 32 3A 00
   024A 03 04 05 06 42 43   110 btnsymbols:	.fcb	0x03,0x04,0x05,0x06,'B,'C,'A,'S,0x00
        41 53 00
                            111 
                            112 
                            113 ;------------------------------------------------------------------------------
                            114 ; variables
                            115 ;------------------------------------------------------------------------------
                            116 
   0253                     117 PAD1STATE:	.rmb	1
   0254                     118 PAD2STATE:	.rmb	1
